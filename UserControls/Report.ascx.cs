using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;

public partial class UserControls_Report : System.Web.UI.UserControl
{
    SqlConnection sqlcon = new SqlConnection();
    SqlCommand sqlcom;
    static int ExamId;
    DataSet myds = null;
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!IsPostBack)
        {
            bind();
        }
    }

    public void bind()
    {

        sqlcon.ConnectionString = DealData.constring;
        sqlcom = new SqlCommand("usp_MarkExam", sqlcon);
        sqlcom.CommandType = CommandType.StoredProcedure;
        SqlDataAdapter myda = new SqlDataAdapter(sqlcom);
        myds = new DataSet();
        try
        {
            sqlcon.Open();
            myda.Fill(myds, "表");
            GridView1.DataSource = myds;
            Session["ds"] = myds;
            GridView1.DataKeyNames = new string[] { "ExamId" };
            GridView1.DataBind();

        }
        catch (Exception ex)
        {
            eMessage.Message("连接数据库失败，请稍后再试");
            eMessage.Message(ex);
        }
        finally
        {
            sqlcon.Close();
        }
    }

    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            e.Row.Attributes.Add("onmouseover", "this.style.backgroundColor='#E6F5FA'");
            e.Row.Attributes.Add("onmouseout", "this.style.backgroundColor='#FFFFFF'");
            e.Row.Attributes.Add("style", "cursor: pointer");
        }
    }



    protected void LinkButton_Command(object sender, CommandEventArgs e)
    {
        if (e.CommandName == "OnClick")
        {
            
            
            ExamId = int.Parse(e.CommandArgument.ToString());
            SqlDataSource2.SelectParameters["ExamId"].DefaultValue = e.CommandArgument.ToString();
            Button1.Visible = true;
            

        }
    }
   


    protected void Button1_Click(object sender, EventArgs e)
    {
        sqlcon.ConnectionString = DealData.constring;
        sqlcom = new SqlCommand("usp_ShowMarks", sqlcon);
        sqlcom.CommandType = CommandType.StoredProcedure;
        sqlcom.Parameters.Add(new SqlParameter("@ExamId", SqlDbType.Int, int.MaxValue)).Value = ExamId;
        SqlDataAdapter myda = new SqlDataAdapter(sqlcom);
        DataSet myds = new DataSet();
        sqlcon.Open();
        myda.Fill(myds, "表");
        sqlcon.Close();
        DataTable tb = myds.Tables[0];
        OutExcel(tb, Page);
    }

    public void OutExcel(DataTable dt, Page page)
    {
        GridView gv = new GridView();
        page.Response.Clear();
        page.Response.Write("<meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">");
        page.Response.AddHeader("content-disposition", "attachment;filename=StudentMarks.xls");
        page.Response.Charset = "GB2312";
        page.Response.ContentType = "application/vnd.xls";
        System.IO.StringWriter stringWrite = new System.IO.StringWriter();
        HtmlTextWriter htmlWrite = new HtmlTextWriter(stringWrite);
        gv.AllowPaging = false;
        gv.AllowSorting = false;
        gv.AutoGenerateDeleteButton = false;
        gv.AutoGenerateEditButton = false;
        gv.AutoGenerateSelectButton = false;
        gv.ShowFooter = false;
        gv.DataSource = dt;
        gv.DataBind();
        gv.RenderControl(htmlWrite);
        page.Response.Write(stringWrite.ToString());
        page.Response.End();
    }

    protected void GridView2_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            if (int.Parse(e.Row.Cells[5].Text) < 0)
            {
                e.Row.Cells[5].Text = "未完成批阅";
                e.Row.Cells[6].Text = e.Row.Cells[4].Text;
            }
            e.Row.Attributes.Add("onmouseover", "javascript:this.style.backgroundColor='#E6F5FA';");
            e.Row.Attributes.Add("style", "cursor: pointer");
            e.Row.Attributes.Add("onmouseout", "javascript:this.style.backgroundColor='#CAE5E8';this.style.cursor='hand';");
        }
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        if (Session["ds"] != null)
            myds = (DataSet)Session["ds"];
        GridView1.PageIndex = e.NewPageIndex;
        GridView1.DataSource = myds;               //引用刚才建立的数据源
        GridView1.DataBind();
    }
}
